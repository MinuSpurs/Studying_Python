1. 분석할 행정동 선택->dong_code에 입력받음
2. code_data[-1]에 입력받은 행정동과 똑같은게 있는지 돌면서 찾음
3. 일치하는게 있으면 dong_code에 저장

핫플레이스 시간대별 평균 인구
1. population리스트 만들고 초기값 0으로 저장
2. data를 돌면서 row[2]와 dong_code 가 일치한다면
3. time에 시간대 row[1]을 저장해주고 p에 row[3]를 저장
4. population[time]에 p를 더해준다
5. population각 원소를 31로 나눠준다 (12월은 31일이기 때문에)

주중/주말 시간대별 인구 분석
1. 주중인구, 주말인구를 저장할 리스트(weekday, weekend)에 길이가 24고 값이 0인 리스트 만들기
2. data를 돌면서 row[2]와 dong_code가 일치하는지 확인
3. 일치하면 time에 row[1]을 저장, p에는 row[3]을 저장, year, month, day에는 기준일ID의 년, 월, 일 저장
4. 그날이 주중인지 주말인지 확인(datetime.date(년,월,일).weekday() -> datetime라이브러리 안에 있음)
5. 주중이면 weekday에 p를 더해줌, 주말이면 weekend에 p를 더해줌
6. 주중의 수와 주말의 수를 구하는 변수 day_cnt, end_cnt를 초깃값 0으로 생성
7. data를 돌면서 datetime.date().weekday()의 값이 0~4면 day_cnt 값을 증가, 5~6이면 end_cnt를 증가
8. weekday, weekend의 리스트 값들을 각각 day_cnt, end_cnt로 나눠줌

남녀 시간대별 평균 인구
1. 남성인구, 여성인구를 저장할 리스트 male, female을 길이가 24, 초깃값은 0으로 생성
2. data를 돌면서 row[2]와 dong_code가 일치하는지 확인
3. 일치한다면 time에 row[1]을 저장하고 m에 row[4]+row[5]+ ... +row[17] f에 row[18]+row[19]+...+row[31] 을 저장 (반복문)
4. male[time]에는 m을 더해주고 female[time]에는 f를 더해줌
5. male과 female의 리스트값을 모두 31로 나눠줌

다른 지역과 인구 비교 분석하기
1. 핫플레이스 지역을 입력 받은 후 비교할 지역을 입력받고 dong_code2에 저장(동 이름은 dong2에 저장)
2. population, population2 의 이름을 가진 길이가 24이고 초깃값이 0인 리스트 생성
3. data를 돌면서 dong_code와 row[2]가 같은지 확인
4. 같다면 time에 row[1]을 저장, p에 row[3]을 저장
5. population[time]에 p를 더해준다
6. dong_code2와 row[2]가 같은지 다시 elif문으로 확인한다
7. 같다면 time에 row[1]을 저장, p에 row[3]을 저장
8. population2[time]에 p를 더해준다
9. 두 리스트의 값들을 31로 나눠준다.